--1
select AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPE
		from AUDITORIUM inner join AUDITORIUM_TYPE
		on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE

--2
select AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME
		from AUDITORIUM inner join AUDITORIUM_TYPE
		on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE and AUDITORIUM_TYPE.AUDITORIUM_TYPENAME like '%компьютер%'

--3
select AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPE
		from AUDITORIUM, AUDITORIUM_TYPE
		where AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE

select AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME
		from AUDITORIUM, AUDITORIUM_TYPE
		where AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE and AUDITORIUM_TYPE.AUDITORIUM_TYPENAME like '%компьютер%'

--4
select PROGRESS.NOTE, STUDENT.NAME, SUBJECT.SUBJECT, PULPIT.PULPIT, FACULTY.FACULTY,
case
	when (PROGRESS.NOTE = 6) then 'шесть'
	when (PROGRESS.NOTE = 7) then 'семь'
	when (PROGRESS.NOTE = 8) then 'восемь'
	else 'error'
	end [Оценка]
from PROGRESS inner join STUDENT on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
	inner join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	inner join PULPIT on PULPIT.PULPIT = SUBJECT.PULPIT
	inner join FACULTY on FACULTY.FACULTY = PULPIT.FACULTY
where PROGRESS.NOTE between 6 and 8 order by PROGRESS.NOTE desc;

--5
select PROGRESS.NOTE, STUDENT.NAME, SUBJECT.SUBJECT, PULPIT.PULPIT, FACULTY.FACULTY,
case
	when (PROGRESS.NOTE = 6) then 'шесть'
	when (PROGRESS.NOTE = 7) then 'семь'
	when (PROGRESS.NOTE = 8) then 'восемь'
	else 'error'
	end [Оценка]
from PROGRESS inner join STUDENT on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
	inner join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	inner join PULPIT on PULPIT.PULPIT = SUBJECT.PULPIT
	inner join FACULTY on FACULTY.FACULTY = PULPIT.FACULTY
where PROGRESS.NOTE between 6 and 8
order by case
	when PROGRESS.NOTE like 7 then 1
	when PROGRESS.NOTE like 8 then 2
	when PROGRESS.NOTE like 6 then 3
	else 4
	end;

--6
select isnull (TEACHER.TEACHER_NAME, '***')[Преподаватель], PULPIT.PULPIT_NAME[Кафедра]
	from PULPIT left outer join TEACHER
	on PULPIT.PULPIT = TEACHER.PULPIT;

--7
select isnull (TEACHER.TEACHER_NAME, '***')[Преподаватель], PULPIT.PULPIT_NAME[Кафедра]
	from TEACHER left outer join PULPIT
	on PULPIT.PULPIT = TEACHER.PULPIT;
--каждый преподаватель закреплен за определенной кафедрой

select isnull (TEACHER.TEACHER_NAME, '***')[Преподаватель], PULPIT.PULPIT_NAME[Кафедра]
	from TEACHER right outer join PULPIT
	on PULPIT.PULPIT = TEACHER.PULPIT;
--правое внешнее включает несоединенные строки 

--8
----1
SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME
	from AUDITORIUM_TYPE full outer Join AUDITORIUM
	on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;

SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME
	from AUDITORIUM full outer Join AUDITORIUM_TYPE
	on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;

----2
SELECT TEACHER.TEACHER_NAME, PULPIT.PULPIT_NAME 
	from PULPIT left outer join TEACHER
	on PULPIT.PULPIT = TEACHER.PULPIT;
--вся левая таблица
SELECT TEACHER.TEACHER_NAME, PULPIT.PULPIT_NAME 
	from PULPIT right outer join TEACHER 
	on PULPIT.PULPIT = TEACHER.PULPIT;
--вся правая таблица
SELECT TEACHER.TEACHER_NAME, PULPIT.PULPIT_NAME
	from PULPIT full outer join TEACHER 
	on PULPIT.PULPIT = TEACHER.PULPIT;
--объединение двух таблиц

----3
SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME 
	from AUDITORIUM Inner Join AUDITORIUM_TYPE 
	on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;
--inner
SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME 
	from AUDITORIUM full outer Join AUDITORIUM_TYPE 
	on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;
--full включает inner

-------------------

----1
SELECT TEACHER.TEACHER_NAME, PULPIT.PULPIT_NAME
	from PULPIT full outer join TEACHER
	on PULPIT.PULPIT = TEACHER.PULPIT where PULPIT.PULPIT_NAME is null;
--содержит правую

----2
SELECT TEACHER.TEACHER_NAME, PULPIT.PULPIT_NAME
	from PULPIT full outer join TEACHER 
	on PULPIT.PULPIT = TEACHER.PULPIT where PULPIT.PULPIT_NAME is not null;
--содержит левую

----3
SELECT TEACHER.TEACHER_NAME, PULPIT.PULPIT_NAME 
	from PULPIT full outer join TEACHER 
	on PULPIT.PULPIT = TEACHER.PULPIT;
--содержит и правую и левую

--9
SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME 
	from AUDITORIUM cross Join AUDITORIUM_TYPE 
	where AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;

--10
create table TIMETABLE (
	IDGROUP int foreign key references GROUPS(IDGROUP),
	AUDITORIUM char(20) foreign key references AUDITORIUM(AUDITORIUM),
	PULPIT char(20) foreign key references PULPIT(PULPIT),
	TEACHER char(10) foreign key references TEACHER(TEACHER),
	DAY_WEEK varchar(15),
	PARA char(15)
);

insert into TIMETABLE values
	(1, '236-1', 'ПОиСОИ', 'ГРН','понедельник','1'),
	(1, '206-1', 'ИСиТ', 'УРБ','вторник','2'),
	(1, '301-1', 'ИСиТ', 'УРБ','среда','3'),
	(1, '313-1', 'ПОиСОИ', 'ГРН','четверг','3');

select AUDITORIUM.AUDITORIUM[АУДИТОРИЯ], isnull(TIMETABLE.PARA, 'не выбрано')[ПАРА]
	from AUDITORIUM left outer join TIMETABLE
	on AUDITORIUM.AUDITORIUM = TIMETABLE.AUDITORIUM;

select AUDITORIUM.AUDITORIUM[АУДИТОРИЯ], isnull(TIMETABLE.DAY_WEEK, 'не выбрано')[ДЕНЬ НЕДЕЛИ]
	from AUDITORIUM left outer join TIMETABLE
	on AUDITORIUM.AUDITORIUM = TIMETABLE.AUDITORIUM;

select TEACHER.TEACHER[ПРЕПОДАВАТЕЛЬ], TIMETABLE.PARA [ПАРА]
	from TEACHER full outer join TIMETABLE
	on TEACHER.TEACHER = TIMETABLE.TEACHER;


SELECT AUDITORIUM_TYPE.AUDITORIUM_TYPENAME, AUDITORIUM.AUDITORIUM
FROM AUDITORIUM_TYPE full outer JOIN AUDITORIUM
on AUDITORIUM.AUDITORIUM_TYPE=AUDITORIUM_TYPE.AUDITORIUM_TYPE 
union 
SELECT  AUDITORIUM_TYPENAME, AUDITORIUM
from AUDITORIUM_TYPE, AUDITORIUM
where not exists (SELECT AUDITORIUM_TYPE.AUDITORIUM_TYPENAME, AUDITORIUM.AUDITORIUM
	from AUDITORIUM_TYPE right outer Join AUDITORIUM
	on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE);

SELECT AUDITORIUM_TYPE.AUDITORIUM_TYPENAME, AUDITORIUM.AUDITORIUM
	from AUDITORIUM left outer Join AUDITORIUM_TYPE
	on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;

----left через full
SELECT AUDITORIUM_TYPE.AUDITORIUM_TYPENAME, AUDITORIUM.AUDITORIUM
FROM AUDITORIUM full outer JOIN AUDITORIUM_TYPE 
on AUDITORIUM.AUDITORIUM_TYPE=AUDITORIUM_TYPE.AUDITORIUM_TYPE 
where exists (SELECT AUDITORIUM.AUDITORIUM_TYPE 
FROM AUDITORIUM, AUDITORIUM_TYPE 
WHERE AUDITORIUM.AUDITORIUM_TYPE=AUDITORIUM_TYPE.AUDITORIUM_TYPE);

select TEACHER.TEACHER[ПРЕПОДАВАТЕЛЬ], TIMETABLE.PARA [ПАРА]
	from TEACHER full outer join TIMETABLE
	on TEACHER.TEACHER = TIMETABLE.TEACHER
	where exists (SELECT TEACHER.TEACHER
		from TEACHER, TIMETABLE
		where TEACHER.TEACHER = TIMETABLE.TEACHER);

select TEACHER.TEACHER[ПРЕПОДАВАТЕЛЬ], TIMETABLE.PARA [ПАРА]
	from TEACHER left outer join TIMETABLE
	on TEACHER.TEACHER = TIMETABLE.TEACHER

SELECT AUDITORIUM_TYPE.AUDITORIUM_TYPENAME, AUDITORIUM.AUDITORIUM
FROM AUDITORIUM cross JOIN AUDITORIUM_TYPE 
where AUDITORIUM.AUDITORIUM_TYPE=AUDITORIUM_TYPE.AUDITORIUM_TYPE 
AND exists (SELECT AUDITORIUM.AUDITORIUM_TYPE 
FROM AUDITORIUM, AUDITORIUM_TYPE 
WHERE AUDITORIUM.AUDITORIUM_TYPE=AUDITORIUM_TYPE.AUDITORIUM_TYPE);

SELECT AUDITORIUM_TYPE.AUDITORIUM_TYPENAME, AUDITORIUM.AUDITORIUM
	from AUDITORIUM left outer Join AUDITORIUM_TYPE
	on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;